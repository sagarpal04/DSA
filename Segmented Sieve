// n is very large say 10 ^ 9
// we have [low,high] as input high as 10 ^ 9
// example : input : low = 2, high = 10
// output = 2,3,5,7


#include<bits/stdc++.h>
using namespace std;
int N = 1000000;
bool sieve[1000001] = {0};
void createSieve(){
    for(int i = 2; i <= N; i++){
        sieve[i] = true;
    }
    for(int i = 2; i * i <= N; i++){
        if(sieve[i]){
            for(int j = i * i; j <= N; j += i){
                sieve[j] = false;
            }
        }
    }
}
vector<int> generatePrimes(int N){
    vector<int> ds;
    for(int i = 2; i <= N; i++){
        if(sieve[i] == true){
            ds.push_back(i);
        }
    }
    return ds;
}
int main(){
    createSieve();
    int t;
    cin >> t;
    while(t--){
        int l, r;
        cin >> l >> r;
        // generate all primes till sqrt(r)
        vector<int>primes = generatePrimes(sqrt(r));
        // create dummy array of r - l + 1 and marks everyone with 1
        int dummy[r - l + 1];
        int i = 0;
        if(l == 0 || l == 1){
            i = 2;
        }
        for(; i < r - l + 1; i++){
            dummy[i] = 1;
        }
        for(auto pr : primes){
            int firstMultiple = (l/pr) * pr;
            if(firstMultiple < l){
                firstMultiple += pr;
            }
            for(int j = max(firstMultiple, pr*pr); j <= r; j += pr){
                dummy[j - l] = 0;
                
            }
        }
        for(int i = l; i <= r; i++){
            if(dummy[i - l] == 1){
                cout << i << " ";
            }
        }
        cout << endl;
    }
}
